{"version":3,"sources":["App.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","debounce","func","delay","debounced","setTimeout","getRisingNumbers","a","state","maxCount","b","Math","floor","console","log","setState","maxRandNum","minRandNum","setCount","_this$state","interval","setInterval","count","random","_this2","_this$state2","clearInterval","timer","clearTimeout","react_default","createElement","className","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"yNAiFeA,qBA7Eb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAyBFI,SAAW,SAACC,EAAMC,GAChBT,EAAKU,UAAYC,WAAW,WAC1BH,KACCC,IA7BST,EAgCdY,iBAAmB,WACjB,IAAMC,EAAIb,EAAKc,MAAMC,SAAW,GAC1BC,EAAIC,KAAKC,MAAMlB,EAAKc,MAAMC,SAAW,IAC3CI,QAAQC,IAAIP,EAAGG,GACfhB,EAAKqB,SAAS,CACZC,WAAYT,EACZU,WAAYP,KAtCFhB,EA4CdwB,SAAW,WAAM,IAAAC,EAC8BzB,EAAKc,MAA1CQ,EADOG,EACPH,WAAYC,EADLE,EACKF,WAAYR,EADjBU,EACiBV,SAChCf,EAAK0B,SAAWC,YACd,kBACE3B,EAAKqB,SAAS,CACZO,MACE5B,EAAKc,MAAMc,MAAQb,EACff,EAAKc,MAAMc,MACXX,KAAKC,MACHD,KAAKY,UAAYP,EAAaC,GAAcA,GAE9CR,KAEV,KAvDFf,EAAKc,MAAQ,CACXc,MAAO,EACPb,SAAU,KAJAf,mFAUZG,KAAKS,gEAGc,IAAAkB,EAAA3B,KAAA4B,EACO5B,KAAKW,MAAxBc,EADYG,EACZH,MACHA,IAFeG,EACLhB,WAEZiB,cAAc7B,KAAKuB,UACnBvB,KAAK8B,MAAQtB,WAAW,kBAAMmB,EAAKT,SAAS,CAAEO,MAAO,KAAM,MAE/C,IAAVA,IACFM,aAAa/B,KAAK8B,OAClB9B,KAAKI,SAASJ,KAAKqB,SAAU,sCAyC/B,OACEW,EAAAtB,EAAAuB,cAAA,OAAKC,UAAU,OACbF,EAAAtB,EAAAuB,cAAA,UAAQC,UAAU,cAChBF,EAAAtB,EAAAuB,cAAA,SAAIjC,KAAKW,MAAMc,wDAOrBI,cAAc7B,KAAKuB,UACnBQ,aAAa/B,KAAK8B,cA1EJK,cCElBC,IAASC,OAAOL,EAAAtB,EAAAuB,cAACK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c8ddc100.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0,\n      maxCount: 10000 \n    };\n  }\n\n\n  componentDidMount() {\n    this.getRisingNumbers();\n  }\n\n  componentDidUpdate() {\n    const {count, maxCount} = this.state;\n    if (count === maxCount) {\n      clearInterval(this.interval);\n      this.timer = setTimeout(() => this.setState({ count: 0 }), 1000);\n    }\n    if (count === 0) {\n      clearTimeout(this.timer);\n      this.debounce(this.setCount, 10);\n    }\n  }\n\n  //this method use for prevent immediately calling function;\n  debounce = (func, delay) => {\n    this.debounced = setTimeout(() => {\n      func();\n    }, delay);\n  };\n  //this method help us to get min and max integers for getting random number which adding in setCount method;\n  getRisingNumbers = () => {\n    const a = this.state.maxCount / 20;\n    const b = Math.floor(this.state.maxCount / 50);\n    console.log(a, b);\n    this.setState({\n      maxRandNum: a,\n      minRandNum: b\n    });\n    return;\n  };\n\n  //this method use random integers range from minRandNum to maxRandNum state and add it to count state every interval\n  setCount = () => {\n    const { maxRandNum, minRandNum, maxCount } = this.state;\n    this.interval = setInterval(\n      () =>\n        this.setState({\n          count:\n            this.state.count < maxCount\n              ? this.state.count +\n                Math.floor(\n                  Math.random() * (maxRandNum - minRandNum) + minRandNum\n                )\n              : maxCount\n        }),\n      30\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>{this.state.count}</p>\n        </header>\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    clearTimeout(this.timer);\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}